{"ast":null,"code":"var _jsxFileName = \"c:\\\\awa\\\\src\\\\components\\\\ListItem.js\";\nimport React, { Component } from 'react';\nexport class ListItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        padding: \"15px\",\n        textDecoration: this.props.list.reserved ? \"line-through\" : \"none\"\n      };\n      /* long way to do it\r\n          if(this.props.list.reserved) {\r\n      return {\r\n          textDecoration: \"line-through\"\r\n      }\r\n          } else {\r\n              return {\r\n                  textDecoration: \"none\"\r\n              }\r\n          } */\n    };\n  }\n\n  //The function takes an event parameter\n  render() {\n    const _this$props$list = this.props.list,\n          id = _this$props$list.id,\n          place = _this$props$list.place;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markReserved.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), place));\n  }\n\n}\nexport default ListItem;","map":{"version":3,"sources":["c:/awa/src/components/ListItem.js"],"names":["React","Component","ListItem","getStyle","padding","textDecoration","props","list","reserved","render","id","place","markReserved","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACxCE,QADwC,GAC7B,MAAM;AACb,aAAO;AACHC,QAAAA,OAAO,EAAC,MADL;AAGHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,QAAhB,GAChB,cADgB,GACA;AAJb,OAAP;AAMJ;;;;;;;;;;AAUC,KAlBuC;AAAA;;AAmBxC;AAEIC,EAAAA,MAAM,GAAG;AAAA,6BACc,KAAKH,KAAL,CAAWC,IADzB;AAAA,UACEG,EADF,oBACEA,EADF;AAAA,UACMC,KADN,oBACMA,KADN;AAEL,WACI;AAAK,MAAA,KAAK,EAAE,KAAKR,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWM,YAAX,CAAwBC,IAAxB,CAChC,IADgC,EAC1BH,EAD0B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKKC,KALL,CADH,CADJ;AAYH;;AAnCmC;AAsCxC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class ListItem extends Component {\r\ngetStyle = () => {\r\n    return {\r\n        padding:\"15px\",\r\n        \r\n        textDecoration: this.props.list.reserved ?\r\n        \"line-through\": \"none\"\r\n    }\r\n/* long way to do it\r\n    if(this.props.list.reserved) {\r\nreturn {\r\n    textDecoration: \"line-through\"\r\n}\r\n    } else {\r\n        return {\r\n            textDecoration: \"none\"\r\n        }\r\n    } */\r\n}\r\n//The function takes an event parameter\r\n\r\n    render() {\r\n        const {id, place} =this.props.list;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n               <p>\r\n                   <input type=\"checkbox\" onChange={this.props.markReserved.bind\r\n                   (this, id)}\r\n                   \r\n                   />\r\n                   {place}\r\n                   \r\n                   </p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem\r\n"]},"metadata":{},"sourceType":"module"}